[tag groups]
nptype:loc,ant,al
gender:m,f,mf,GD,nt
numberat:sg,pl,sp,ND
person:p1,p2,p3
advtype:itg:adv
prntype:itg,enc,pro,tn:prn
verbtime:inf,ger,pp,pri,ifi,pii,fti,cni,prs,pis,fts,imp
determinertype:def,ind,dem,pos:det
adjtype:ind,itg,pos,sup:adj
reltype:aa,an,nn,adv:rel
ntype:acr
isrefadv:ref,adv,pos:prn

[tag sequences]
adj:adjtype,gender,numberat
adv:advtype
det:determinertype,gender,numberat
n:ntype,gender,numberat
np:nptype
predet:gender,numberat
prn:prntype,isrefadv,person,gender,numberat
rel:reltype,gender,numberat
vbhaver:verbtime,person,gender,numberat
vblex:verbtime,person,gender,numberat
vaux:verbtime,person,gender,numberat
vbmod:verbtime,person,gender,numberat
vbser:verbtime,person,gender,numberat
num:gender,numberat

[preprocess SL]

[preprocess TL]
#When analysing the parallel corpus with Apertium, some additional operations may be needed.
#The main reason to include these additional operations is that Apertium language pairs are not
#symmetric. When ruLearn analyses the training corpus for rule inference, it
#uses the result of compiling TL monolingual dictionary as if it is used for analysing
#the input text in the TL->SL language pair. The morphological inflection information
#tags may not be the same as when the TL monolingual dictionary is used for generating
#surface forms in the SL->TL language pair. A typical example is the definite determiner
in Catalan when inferring rules for the Spanish->Catalan language pair.
# When this determiner is placed before a word that starts with vowel, it is written as
#"l'" instead of "el" (masculine) or "la" (feminine). When the Catalan monolingual
#dictionary is compiled for analysis, it analyses "l'" as <det><def><mf><sg> (definite determiner
#masculine-feminine singular). However, when the Catalan dictionary is compiled for
#generation, it does not contain any entry for "el<det><def><mf><sg>" because, when we translate
#from Spanish, the transfer module only generates determiners with either masculine or
#feminine gender, and the post-generation module is the one that turns el+vowel or la+vowel
#into l'+vowel. Thus, we don't want the automatically inferred transfer rules
#to generate "el<det><def><mf><sg>". In order to avoid that, we must postprocess the output
#of the analysis of the Catalan side of the training corpus to replace the lexical forms
#"el<det><def><mf><sg>" with either "el<det><def><m><sg>" or "la<det><def><f><sg>".
#The sed commands contained below carry out this preprocessing:
sed -re "s/([\^])anar<vblex><pri>((<[a-z0-9]+>)+[$])[ ]+([\^][[:alnum:]]+)(<vblex><inf>|<vbmod><inf>|<vbser><inf>|<vbhaver><inf>[$])/\1anar<vaux>\2 \4\5/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><f><sp>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><m><sp>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><ind><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><ind><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<vblex><pp><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<vblex><pp><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<num>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<vblex><inf>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><mf><sg>[$])[ ]+([\^][[:alnum:]]+<n><f><sg>[$])/^el<det><def><f><sg>$ \1 \2/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><mf><sg>[$])[ ]+([\^][[:alnum:]]+<n><m><sg>[$])/^el<det><def><m><sg>$ \1 \2/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<prn><tn><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<prn><tn><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><acr><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><acr><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<adj><mf><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><mf><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><acr><f><sp>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:]]+<n><acr><m><sp>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^][[:alnum:],.]+<num>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Ariadna<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Alberto<np><ant>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Oriol<np><ant>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Erika<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ONG<np><al>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Hospitalet<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Obreg�n<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ABC<np><al>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]absolutament<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]actualment<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ad�u<ij>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]agreujar<vblex><ger>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ahir<adv>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ai<ij>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Albacete<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]alerta<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]aleshores<cnjadv>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Almudena<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]alt<adj><sup><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Am�rica<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Ana<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Anna<np><loc>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Anoia<np><loc>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Antonio<np><ant>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]a<pr>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ara<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Arag�<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Arnau<np><ant>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]assaltar<vblex><ger>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Athletic<np><al>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]atreure<vblex><ger>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ATS<n><acr><mf><sp>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]autopista<n><f><pl>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]avui<adv>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Eduard<np><ant>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]el<detnt>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Elx<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]encara<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]en<pr>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ensenyar<vblex><ger>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]entitat<n><f><pl>[$])/^el<det><def><f><pl>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]envoltar<vblex><ger>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Espanya<np><loc>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]espanyol<adj><sup><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]es<prn><pro><ref><p3><mf><sp>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]este<prn><tn><f><pl>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]estrany<adj><sup><f><sg>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]estudiant<n><f><pl>[$])/^el<det><def><f><pl>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Europa<np><loc>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Euskadi<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Extremadura<np><loc>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]FP<np><al>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]haver#_de<vbmod><inf>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]haver<vbhaver><inf>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]hist�ricament<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]i<cnjcoo>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]IES<np><al>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]inicialment<adv>[$])/^el<det><def><f><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]�<lquest>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]MP3<np><al>[$])/^el<det><def><m><sg>$ \1/g" |\
#sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]o<cnjcoo>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Olivia<np><ant>[$])/^el<det><def><f><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]onze<num><mf><sp>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Orense<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Osasuna<np><al>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]Oviedo<np><loc>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]ser<vbser><pp><m><sg>[$])/^el<det><def><m><sg>$ \1/g" |\
sed -re "s/[\^]el<det><def><mf><sg>[$][ ]+([\^]u<num><m><sp>[$])/^el<det><def><m><sg>$ \1/g"

[markers]
cm,cnjcoo,cnjsub,det,detnt,lpar,lquest,pr,preadv,predet,prn,rel,rpar,vbdo,vbhaver,vbmod,vbser,vaux,gen

[post transfer]
#When applying the learned rules, it may be necessary to join some lexical forms generated by them to allow the
#Apertium generation module to correctly inflect them. For instance, verbs and enclitic pronouns are
#found as a single unit in the Apertium monolingual dictionaries. The sequences of lexical
#forms that will be joined when applying and evaluating the rule inference algorithm are defined in this section.
#The expected format is the following: one sequence per line, lexical forms separated by whitespace, lemma
#is not mandatory, a wildcard (*) can be used in order to match any sequence of tags for a given
#lexical form.
vblex.* prn.enc.*
vblex.* prn.enc.* prn.enc.*
vbser.* prn.enc.*
vbser.* prn.enc.* prn.enc.*
vbhaver.* prn.enc.*
vbhaver.* prn.enc.* prn.enc.*
vbmod.* prn.enc.*
vbmod.* prn.enc.* prn.enc.*
vaux.* prn.enc.*
vaux.* prn.enc.* prn.enc.*
