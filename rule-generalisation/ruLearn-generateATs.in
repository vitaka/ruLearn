#! __BASH__
#
# Copyright 2009-2016 Víctor M. Sánchez-Cartagena, Felipe Sánchez-Martínez, Universitat d'Alacant
#
# This file is part of ruLearn.
# ruLearn is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# ruLearn is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with ruLearn.  If not, see <http://www.gnu.org/licenses/>.
#


set -o pipefail

INPUTFILE=.
WORKDIR=../work-es-ca-transfertools-2M/linear-experiments
ID="shuf10"
CURDIR=`dirname $0`
PYTHONLIBDIR=__PYTHONLIBDIR__


#types of generalisation:
# -c : classic method. TL special attributes follow alignments. Do not use
# -c -n : new method. TL special attributes contain references to SL tags. Subproblems are split according to category and restrictions
# (nothing) : new method.TL special attributes contain references to SL tags and blingual dictionary Subproblems are split according to category
# -r : new method.TL special attributes contain references to SL tags and blingual dictionary. All the combinations of restrictions are explored. Subproblems are split according to category
# -g : new method.TL special attributes contain references to SL tags and blingual dictionary. Combinations of restrictions GD;ND, etc. are explored. Subproblems are split according to category
# -l : new method.TL special attributes contain references to SL tags and blingual dictionary. Combinations of restrictions combinations of restrictions GD;ND;mf;,etc are explored. Subproblems are split according to category

NUM_PARTS=1
CHOSEN_PART=1

COPY_EMPTY_TAGS=="no"

TAGSEQUENCESANDGROUPSSUFFIX=""
TAGGROUPSGENEMPTYSL=""
TAGGROUPSGENEMPTYTL=""

PYTHONHOME=""

STEP=""

PARALLELONLYONE=""

RICHATS="yes"
RICHATSFLAG="--rich_ats --ref_to_biling"
POWERSETFEATURESFLAG="--generalise_from_right_to_left"
RICHATSFLAGONLYGEN=""
DIFFERENTRESTRICTIONSFLAGP1=""
DIFFERENTRESTRICTIONSFLAGP2=""

GENATTRIBUTEINSTANCESTOGETHER=""

GENATTRIBUTESLIKEINPAPER=""

FIRSTMINIMISELEMMAS=""

UNLEXICALISEUNALIGNEDSLFLAG=""

ALT_INPUTFILE=""

ONLYLEXICALGENFLAG=""

RBPEFLAG=""

usage()
{
cat << EOF
Bla bla bla

EOF
}

while getopts “f:d:i:p:x:e:h:t:m:yqca:nrglvsubjkowz:5678” OPTION
do
     case $OPTION in
        f)
             INPUTFILE=$OPTARG
             ;;
        z)
	     ALT_INPUTFILE=$OPTARG
	     ;;
        d)
             WORKDIR=$OPTARG
             ;;
        i)
	     ID=$OPTARG
             ;;
        x)
                TAGSEQUENCESANDGROUPSSUFFIX=$OPTARG
                ;;
        e)
                TAGGROUPSGENEMPTYSL=$OPTARG
                ;;
        h)
                PYTHONHOME=$OPTARG
                ;;
        t)
                STEP=$OPTARG
                ;;
        m)
                NUM_PARTS=`echo "$OPTARG" | cut -f 2 -d '-'`
                CHOSEN_PART=`echo "$OPTARG" | cut -f 1 -d '-'`
                ;;
        y)
                COPY_EMPTY_TAGS="yes"
                ;;
        q)
                PARALLELONLYONE="-j 1"
                ;;
        c)
               RICHATS="no"
               RICHATSFLAG=""
               ;;
        a)
                POWERSETFEATURESFLAG="--times_attributes_change $OPTARG" #generate all combinations of features to generalise
                ;;
        n)
		RICHATSFLAGONLYGEN="--rich_ats"
		;;
	r)
	        DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options"
	        ;;
	g)
	        DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_to_be_determined_in_restriction"
	        ;;
	l)
	        DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_to_be_determined_and_mf_in_restriction"
	        ;;
	s)
		DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_to_be_determined_and_change_in_restriction"
	        ;;
	b)
		DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_tags_triggering_diference_in_restriction"
		;;
	j)
		DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_tags_triggering_diference_in_restriction --triggering_limited_length"
		;;
	k)
	       DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_tags_triggering_diference_in_restriction --triggering_limited_length --triggering_no_good_discarded"
		;;
	o)
	       DIFFERENTRESTRICTIONSFLAGP1="--different_restriction_options --only_tags_triggering_diference_in_restriction --triggering_limited_length --discard_restrictions_not_improving"
	       ;;
	v)
	       DIFFERENTRESTRICTIONSFLAGP2="--add_restrictions_to_every_tag"
	       ;;
	u)
	      FIRSTMINIMISELEMMAS="yes"
	      ;;
	w)
	     UNLEXICALISEUNALIGNEDSLFLAG="--unlexicalise_unaligned_sl"
	     ;;
	5)
	     GENATTRIBUTEINSTANCESTOGETHER="--dont_generalise_all_instances_together"
	     ;;
	6)
	     GENATTRIBUTESLIKEINPAPER="--generalisable_attributes_like_in_paper"
	     ;;
	7)
	     ONLYLEXICALGENFLAG="--only_lexical"
	     ;;
	8)
	    RBPEFLAG="--rbpe"
	    ;;
        ?)
             usage
             exit
             ;;
     esac
done

DIFFERENTRESTRICTIONSFLAG="$DIFFERENTRESTRICTIONSFLAGP2 $DIFFERENTRESTRICTIONSFLAGP1"

TRUEWORKDIR="$WORKDIR/$ID"
mkdir -p $TRUEWORKDIR

mkdir -p $TRUEWORKDIR/generalisation/newbilphrases
mkdir -p $TRUEWORKDIR/generalisation-alt1/newbilphrases

CONFIGDIR=$TRUEWORKDIR/config

if [ "COPY_EMPTY_TAGS" == "yes" ]; then
	TAGGROUPSGENEMPTYSL=`cat $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX | cut -f 1 -d ':' | tr '\n' ','`
	TAGGROUPSGENEMPTYTL=$TAGGROUPSGENEMPTYSL
fi

CHOSEN_PART_MINUS_ONE=`expr $CHOSEN_PART - 1`



#if [ ! -f $TRUEWORKDIR/alignmentTemplatesPLusLemmas.gz ]; then

BOXESINDEX="$TRUEWORKDIR/generalisation/boxesindex"

if [ "$STEP" == "1" -o  "$STEP" == "" ]; then

	rm -f $BOXESINDEX

	CURRENTID=1

	echo "Sorting input file" >&2

	RICHATSFLAGFORADD=""
	if [ "$RICHATS" == "yes" ]; then
		RICHATSFLAGFORADD="--rich_ats"
	fi

	#sort input by sl tags and restrictions
	zcat $INPUTFILE $ALT_INPUTFILE  | __PYTHON__ $PYTHONLIBDIR/addPosAndRestrictionsStr.py $ONLYLEXICALGENFLAG --tag_groups_file_name $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CONFIGDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAGFORADD | sed 's_ |_|_' | LC_ALL=C sort | __PYTHON__ $PYTHONLIBDIR/spreadBilphrases.py  > $BOXESINDEX
	if [ "$?" != "0" ]; then
		exit 1
	fi

	zcat $INPUTFILE | __PYTHON__ $PYTHONLIBDIR/addPosAndRestrictionsStr.py $ONLYLEXICALGENFLAG --tag_groups_file_name $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CONFIGDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAGFORADD | sed 's_ |_|_' | LC_ALL=C sort | __PYTHON__ $PYTHONLIBDIR/spreadBilphrases.py --dir $TRUEWORKDIR/generalisation --dict $BOXESINDEX
	if [ "$?" != "0" ]; then
		exit 1
	fi

	if [ "$ALT_INPUTFILE" != "" ]; then
		zcat  $ALT_INPUTFILE  | __PYTHON__ $PYTHONLIBDIR/addPosAndRestrictionsStr.py  $ONLYLEXICALGENFLAG--tag_groups_file_name $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CONFIGDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAGFORADD | sed 's_ |_|_' | LC_ALL=C sort | __PYTHON__ $PYTHONLIBDIR/spreadBilphrases.py --dir $TRUEWORKDIR/generalisation-alt1 --dict $BOXESINDEX
		if [ "$?" != "0" ]; then
			exit 1
		fi
	fi

fi

BOXESINDEXVAR=`cat $BOXESINDEX`


if [ "$STEP" == "2" -o  "$STEP" == "" ]; then

echo "Computing generalisations" >&2

#compute all generalisations
mkdir -p $TRUEWORKDIR/generalisation/ats
rm -Rf $TRUEWORKDIR/generalisation/logs
mkdir -p $TRUEWORKDIR/generalisation/logs

mkdir -p $TRUEWORKDIR/generalisation-alt1/ats
rm -Rf $TRUEWORKDIR/generalisation-alt1/logs
mkdir -p $TRUEWORKDIR/generalisation-alt1/logs

#rm -f $TRUEWORKDIR/generalisation/boxesofnewdata
#for file in `ls $TRUEWORKDIR/generalisation/newbilphrases`; do
#	BOXNAME=${file%.bilphrases.gz}
#	echo "$BOXNAME" >> $TRUEWORKDIR/generalisation/boxesofnewdata
#done

#cat $BOXESINDEX | cut -f 2 | sed 's/__CLOSEWORD__/_a_CLOSEWORD_a_/g' |  awk -F"__" '{print NF"|"$0}' | LC_ALL=C sort -r -n -k1,1 -t '|' | sed 's_^[^|]*|__' | sed 's/_a_CLOSEWORD_a_/__CLOSEWORD__/g' > $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength.tmp
cat $BOXESINDEX | cut -f 2 | sed 's/__CLOSEWORD__/_a_CLOSEWORD_a_/g' |  awk -F"__" '{print NF"|"$0}' > $TRUEWORKDIR/generalisation/boxesindex.length
rm -f $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength
#for line in `cat $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength.tmp`; do
#	INDEXLINE=`echo "$BOXESINDEXVAR" | grep "	$line\$" `
#	echo "$INDEXLINE" | cut -f 1 >> $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength
#done
paste $BOXESINDEX $TRUEWORKDIR/generalisation/boxesindex.length | LC_ALL=C sort -r -n -k 3,3 -t '	' | cut -f 1 >  $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength

split -l 10000 $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength.split
cat $BOXESINDEX > $TRUEWORKDIR/generalisation/finalboxesindex

  #[ \"\`expr \$INDEX \% $NUM_PARTS\`\" == \"$CHOSEN_PART_MINUS_ONE\" ]
  for file in $TRUEWORKDIR/generalisation/boxesofnewdata.sorted.bylength.split* ; do
	  GENERALISATION_DIR=$TRUEWORKDIR/generalisation
	  #parallel $PARALLELONLYONE -i  __BASH__ -c "INDEX=\`echo \"{}\" | cut -f 2\`; NUMLINE=\`echo \"{}\" | cut -f 1\`;  if [ \"\`expr \$NUMLINE % $NUM_PARTS\`\" == \"$CHOSEN_PART_MINUS_ONE\" ] ; then  zcat \"$GENERALISATION_DIR/newbilphrases/\$INDEX.bilphrases.gz\" | ${PYTHONHOME}python $CURDIR/generateMultipleATsFromBilphrases.py --tag_groups_file_name $CURDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CURDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAG $RICHATSFLAGONLYGEN $POWERSETFEATURESFLAG $DIFFERENTRESTRICTIONSFLAG $UNLEXICALISEUNALIGNEDSLFLAG $GENATTRIBUTESLIKEINPAPER $ONLYLEXICALGENFLAG 2> \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\" | gzip > $GENERALISATION_DIR/ats/\$INDEX.ats.gz; gzip \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\"; fi;" -- `cat $file | awk '{printf "%d\t%s\n", NR, $0}'`
	  parallel $PARALLELONLYONE -i  __BASH__ -c "set -o pipefail; INDEX=\`echo \"{}\"\`;  if [ \"\`expr \$INDEX % $NUM_PARTS\`\" == \"$CHOSEN_PART_MINUS_ONE\" ] ; then  zcat \"$GENERALISATION_DIR/newbilphrases/\$INDEX.bilphrases.gz\" | __PYTHON__ $PYTHONLIBDIR/generateMultipleATsFromBilphrases.py --tag_groups_file_name $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CONFIGDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAG $RICHATSFLAGONLYGEN $POWERSETFEATURESFLAG $DIFFERENTRESTRICTIONSFLAG $UNLEXICALISEUNALIGNEDSLFLAG $GENATTRIBUTESLIKEINPAPER $ONLYLEXICALGENFLAG $RBPEFLAG 2> \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\" | gzip > $GENERALISATION_DIR/ats/\$INDEX.ats.gz; if [ \"\$?\" != \"0\" ]; then touch  \"$GENERALISATION_DIR/logs/fail-\$INDEX\"; fi;  gzip \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\";  fi;" -- `cat $file`
		NUMERRORS=`find $GENERALISATION_DIR/logs -name 'fail-*' | wc -l`
		if [ "$NUMERRORS" != "0" ]; then
			  echo "Error in the generalisation of some ATs. See the following log files for more information:" >&2
				find $GENERALISATION_DIR/logs -name 'fail-*' | egrep -o -- '-[0-9]*$' | while read NUM ; do echo "$GENERALISATION_DIR/logs/log-generalisation$NUM.gz" ; done >&2
				exit 1
	  fi

	  if [ "$ALT_INPUTFILE" != "" ]; then
		GENERALISATION_DIR=$TRUEWORKDIR/generalisation-alt1
		parallel $PARALLELONLYONE -i  __BASH__ -c "set -o pipefail; INDEX=\`echo \"{}\" | cut -f 2\`; NUMLINE=\`echo \"{}\" | cut -f 1\`;  if [ \"\`expr \$NUMLINE % $NUM_PARTS\`\" == \"$CHOSEN_PART_MINUS_ONE\" ] ; then  zcat \"$GENERALISATION_DIR/newbilphrases/\$INDEX.bilphrases.gz\" | __PYTHON__ $PYTHONLIBDIR/generateMultipleATsFromBilphrases.py --tag_groups_file_name $CONFIGDIR/taggroups$TAGSEQUENCESANDGROUPSSUFFIX --tag_sequences_file_name $CONFIGDIR/tagsequences$TAGSEQUENCESANDGROUPSSUFFIX $RICHATSFLAG $RICHATSFLAGONLYGEN $POWERSETFEATURESFLAG $DIFFERENTRESTRICTIONSFLAG $UNLEXICALISEUNALIGNEDSLFLAG $GENATTRIBUTESLIKEINPAPER $ONLYLEXICALGENFLAG $RBPEFLAG 2> \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\" | gzip > $GENERALISATION_DIR/ats/\$INDEX.ats.gz; if [ \"\$?\" != \"0\" ]; then touch  \"$GENERALISATION_DIR/logs/fail-\$INDEX\"; fi; gzip \"$GENERALISATION_DIR/logs/log-generalisation-\$INDEX\"; fi;" -- `cat $file | awk '{printf "%d\t%s\n", NR, $0}'`
		NUMERRORS=`find $GENERALISATION_DIR/logs -name 'fail-*' | wc -l`
		if [ "$NUMERRORS" != "0" ]; then
			  echo "Error in the generalisation of some ATs. See the following log files for more information:" >&2
				find $GENERALISATION_DIR/logs -name 'fail-*' | egrep -o -- '-[0-9]*$' | while read NUM ; do echo "$GENERALISATION_DIR/logs/log-generalisation$NUM.gz" ; done >&2
				exit 1
	  fi
	  fi
  done

fi
